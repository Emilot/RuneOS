user root users;
worker_processes  1;

error_log /dev/null crit;
#error_log  /var/log/runeaudio/ui.log;
#error_log  /var/log/runeaudio/ui_error.log  debug;
#error_log  /var/log/runeaudio/ui.log  info;

events {
    worker_connections  1024;
    use                 epoll;
}

http {
    include             mime.types;
    include             fastcgi_params;
    index               index.html index.htm;

    #default_type  application/octet-stream;
    #access_log  /var/log/runeaudio/ui.log  main;
    access_log off;
    sendfile        on;
    keepalive_timeout  0;
    proxy_buffering off;
    fastcgi_keep_conn on;
    fastcgi_buffers 8 16k;
    fastcgi_buffer_size 32k;
    client_max_body_size 50M;

    add_header Access-Control-Allow-Origin "*";

    # push directives
    push_stream_shared_memory_size 50M; #16M
    push_stream_channel_info_on_publish off;

    # start Main Server section [/]
    server {
        listen 80 deferred;
        #access_log  /var/log/runeaudio/ui_access.log;
        root   /opt/frontend;

        #gzip            on;
        #gzip_min_length 1000;
        #gzip_proxied    any;
        #gzip_types      text/css text/plain text/xml application/xml application/javascript application/x-javascript text/javascript application/json text/x-json;

        location /pub {
            # activate publisher (admin) mode for this location
            push_stream_publisher admin;
            # query string based channel id
            push_stream_channels_path $arg_id;
        }

        location ~ /ws/(.*) {
            # activate subscriber (websocket)
            push_stream_subscriber websocket;
            # positional channel path
            push_stream_channels_path $1;
            # message template
            push_stream_message_template                "{\"id\":~id~,\"channel\":\"~channel~\",\"text\":[~text~]}";
            push_stream_ping_message_interval           10s;
        }

        location /images {
    	    root /opt/media;
        }

        # proxy RUELS
        location /api {
            #allow 127.0.0.0/8;
            #deny all;
            proxy_pass        http://localhost:1337/;
        }

        location /covers {
            proxy_pass        http://localhost:81/;
        }

        # redirect server error pages to the static page /50x.html
            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
            root   html;
        }

    } # end Main Server section [/]

    # start COVERS section [/covers]
    server {
        listen 81;
        root /mnt/MPD;
        location ~* \.(jpg|png|jpeg|bmp) {
            expires           7d;
        }
    } # end COVERS section

} # end http block
